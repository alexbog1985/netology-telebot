import telebot
import random
from telebot import types
from telebot.handler_backends import StatesGroup, State

from db import get_all_users, add_user

from settings import TG_TOKEN  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = telebot.TeleBot(TG_TOKEN)  # —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞

known_users = get_all_users()  # –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


class Command:
    ADD_WORD = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'
    DELETE_WORD = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô'
    NEXT = '–î–∞–ª—å—à–µ ‚è≠'


class MyStates(StatesGroup):
    rus_word = State()
    target_eng_word = State()
    other_eng_words = State()


@bot.message_handler(commands=['cards', 'start'])
def start(message):
    cid = message.chat.id
    f_name = message.from_user.first_name
    l_name = message.from_user.last_name
    user_id = message.from_user.id
    username = message.from_user.username
    print(known_users)

    if cid not in known_users:
        add_user(cid, user_id, f_name, l_name, username, step=0)
        bot.send_message(cid, f'–ü—Ä–∏–≤–µ—Ç, {f_name} {l_name}! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫.')

    markup = types.ReplyKeyboardMarkup(row_width=2)

    rus_word = '–ú–∏—Ä'  # –†—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ
    target_eng_word = 'Peace'  # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ
    target_eng_word_button = types.KeyboardButton(target_eng_word)  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    other_eng_words = ['Green', 'Car', 'Hello']  # –¥—Ä—É–≥–∏–µ, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞
    other_eng_word_buttons = [types.KeyboardButton(word) for word in other_eng_words]  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫

    buttons = [target_eng_word_button] + other_eng_word_buttons  # —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    random.shuffle(buttons)  # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫

    next_btn = types.KeyboardButton(Command.NEXT)
    add_word_btn = types.KeyboardButton(Command.ADD_WORD)
    delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
    buttons.extend([next_btn, add_word_btn, delete_word_btn])

    markup.add(*buttons)

    bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ "{rus_word}":', reply_markup=markup)

    bot.set_state(message.from_user.id, MyStates.rus_word, message.chat.id)
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['rus_word'] = rus_word
        data['target_eng_word'] = target_eng_word
        data['other_eng_words'] = other_eng_words


@bot.message_handler(func=lambda message: True, content_types=['text'])
def message_reply(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        target_eng_word = data['target_eng_word']
    if message.text == target_eng_word:
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
    elif message.text == Command.NEXT:
        pass
    elif message.text == Command.ADD_WORD:
        pass
    elif message.text == Command.DELETE_WORD:
        pass
    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!')


if __name__ == '__main__':
    print('Bot started')
    bot.polling(none_stop=True)